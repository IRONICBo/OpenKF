// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/community/create": {
            "post": {
                "description": "Create a new community",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "CreateCommunity",
                "parameters": [
                    {
                        "description": "Community",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/param.CommunityParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/email/code": {
            "post": {
                "description": "Use email to send verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mail"
                ],
                "summary": "SendCode",
                "parameters": [
                    {
                        "description": "Email address",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/param.SendToParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/openim/callback": {
            "post": {
                "description": "Support OpenIM callback",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openim"
                ],
                "summary": "OpenIMCallback",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/register/admin": {
            "post": {
                "description": "Create a new admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "AdminRegister",
                "parameters": [
                    {
                        "description": "RegisterAdminParams",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/param.RegisterAdminParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/register/staff": {
            "post": {
                "description": "Create a new staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "StaffRegister",
                "parameters": [
                    {
                        "description": "RegisterStaffParams",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/param.RegisterStaffParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "param.CommunityParams": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "name"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "param.CreateUserParams": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "nickname",
                "password"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "param.RegisterAdminParams": {
            "type": "object",
            "required": [
                "code",
                "community_info",
                "user_info"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "community_info": {
                    "$ref": "#/definitions/param.CommunityParams"
                },
                "user_info": {
                    "$ref": "#/definitions/param.CreateUserParams"
                }
            }
        },
        "param.RegisterStaffParams": {
            "type": "object",
            "required": [
                "community_id",
                "user_info"
            ],
            "properties": {
                "community_id": {
                    "type": "integer"
                },
                "user_info": {
                    "$ref": "#/definitions/param.CreateUserParams"
                }
            }
        },
        "param.SendToParams": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
